<?xml version="1.0" encoding="UTF-8"?>
<proxy xmlns="http://ws.apache.org/ns/synapse"
       name="UC7_QueueListnerProxy"
       transports="https http jms"
       startOnLoad="true"
       trace="disable">
   <description/>
   <target>
      <inSequence>
         <log level="full"/>
         <rule xmlns="http://wso2.org/carbon/rules">
            <source>soapBody</source>
            <target action="replace" resultXpath="//accept/child::text()">$accept</target>
            <ruleSet>
               <properties/>
               <rule resourceType="regular" sourceType="inline">
                         package SimpleRoutingRules;

                        rule "Invoke IBM" no-loop true
                        when
                        symbol: String() eval( symbol.equals("IBM") )
                        then
                         update(drools.getWorkingMemory().getFactHandle(symbol),"javaVendorEndPoint");
                        end

                        rule "Invoke SUN" no-loop true
                        when
                        symbol: String() eval( symbol.equals("SUN") )
                        then
                         update(drools.getWorkingMemory().getFactHandle(symbol),"javaVendorEndPoint");
                        end

                        rule "Invoke MFST" no-loop true
                        when
                        symbol: String() eval( symbol.equals("MFST") )
                        then
                         update(drools.getWorkingMemory().getFactHandle(symbol),"otherVendorEndPoint");
                        end

					</rule>
            </ruleSet>
            <input namespace="http://services.samples" wrapperElementName="getQuote">
               <fact xmlns:m0="http://services.samples"
                     elementName="symbol"
                     namespace="http://services.samples"
                     type="java.lang.String"
                     xpath="//m0:getQuote/m0:request/m0:symbol/child::text()"/>
            </input>
            <output namespace="http://services.samples"
                    wrapperElementName="getQuoteRespone">
               <fact elementName="accept" namespace="" type="java.lang.String"/>
            </output>
         </rule>
         <log level="custom">
            <property xmlns:m0="http://services.samples"
                      name="SYMBOL***********"
                      expression="//m0:getQuote/m0:request/m0:symbol/child::text()"/>
         </log>
         <log level="custom">
            <property name="ACCEPT*********" expression="get-property('accept')"/>
         </log>
         <switch source="get-property('accept')">
            <case regex="javaVendorEndPoint">
               <log level="custom">
                  <property name="located" value="javaVendorEndPoint"/>
               </log>
               <property name="OUT_ONLY" value="true"/>
               <property name="FORCE_SC_ACCEPTED" value="true" scope="axis2"/>
               <send>
                  <endpoint>
                     <address uri="jms:/javaVendor?transport.jms.ConnectionFactoryJNDIName=QueueConnectionFactory&amp;java.naming.factory.initial=org.wso2.andes.jndi.PropertiesFileInitialContextFactory&amp;java.naming.provider.url=repository/conf/jndi.properties&amp;transport.jms.DestinationType=queue"/>
                  </endpoint>
               </send>
            </case>
            <case regex="otherVendorEndPoint">
               <log level="custom">
                  <property name="located" value="otherVendorEndPoint"/>
               </log>
               <property name="OUT_ONLY" value="true"/>
               <property name="FORCE_SC_ACCEPTED" value="true" scope="axis2"/>
               <send>
                  <endpoint>
                     <address uri="jms:/otherVendor?transport.jms.ConnectionFactoryJNDIName=QueueConnectionFactory&amp;java.naming.factory.initial=org.wso2.andes.jndi.PropertiesFileInitialContextFactory&amp;java.naming.provider.url=repository/conf/jndi.properties&amp;transport.jms.DestinationType=queue"/>
                  </endpoint>
               </send>
            </case>
         </switch>
         <drop/>
      </inSequence>
   </target>
   <parameter name="transport.jms.ContentType">
      <rules>
         <jmsProperty>contentType</jmsProperty>
         <default>application/xml</default>
      </rules>
   </parameter>
</proxy>
